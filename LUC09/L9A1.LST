Turbo Assembler	 Version 3.0	    12/13/20 19:54:35	    Page 1
l9a1.ASM



      1	0000			     .model small
      2	0000			     .stack 100
      3	*000			     sablon struc
      4	*000  01*(????)		       _bp    dw ?
      5	*002  01*(????)		       _cs_ip dw ?
      6	*004  01*(????)		       _n     dw ?
      7	*006			     sablon ends
      8
      9	*000			     sablon1 struc
     10	*000  01*(????)		       __bp    dw ?
     11	*002  01*(????????)	       __cs_ip dd ?
     12	*006  01*(????)		       __n     dw ?
     13	*008			     sablon1 ends
     14	0000			     .data
     15	0000  0007			     n	 dw 7
     16	0002  ????????		       rez dd ?
     17	0006			     .code
     18
     19	0000			       fact proc near
     20	0000  55			   push	bp    ;	salvare	BP
     21	0001  8B EC			   mov bp, sp ;	initializare cu	varful stivei
     22	0003  9C			   pushf      ;	salvarea indicatorilor de conditie
     23	0004  53			   push	bx
     24	0005  8B 5E 04			   mov bx, word	ptr [bp]._n ; preluarea	parametrului
     25	0008  83 FB 00			   cmp bx, 0  ;	conditia de oprire
     26	000B  75 09			   jne rec
     27	000D  B8 0001			   mov ax, 1  ;	0! = 1
     28	0010  BA 0000			   mov dx, 0
     29	0013  EB 0C 90			   jmp stop
     30	0016				 rec:
     31	0016  4B			   dec bx	     ; termenul	urmator
     32	0017  53			   push	bx	     ; transferul parametrului
     33	0018  E8 FFE5			   call	near ptr fact; apel recursiv cu	rezultat in DX:AX
     34	001B  83 C4 02			   add sp, 2
     35	001E  F7 66 04			   mul word ptr[bp]._n
     36	0021				 stop:
     37	0021  5B			   pop bx     ;	refacerea registrului BX
     38	0022  9D			   popf	      ;	refacerea indicatorilor	de conditie
     39	0023  5D			   pop bp
     40	0024  C3			   retn
     41	0025			       fact endp
     42				       ; Doesn't work properly for doubles, only words
     43	0025			       afis proc far
     44	0025  55			   push	bp
     45	0026  8B EC			   mov bp, sp
     46	0028  52			   push	dx
     47	0029  50			   push	ax
     48	002A  53			   push	bx
     49	002B  8B 46 06			   mov ax, [bp].__n
     50	002E  3D 000A			   cmp ax, 10
     51	0031  8A D0			   mov dl, al ;	AX < 10
     52	0033  72 0C			   jb afis_1
     53	0035  BB 000A			   mov bx, 10
     54	0038  33 D2			   xor dx, dx
     55	003A  F7 F3			   div bx  ; AX	<- catul
     56	003C  50			   push	ax ; DX	<- restul
     57	003D  0E E8 FFE4		   call	far ptr	afis
Turbo Assembler	 Version 3.0	    12/13/20 19:54:35	    Page 2
l9a1.ASM



     58	0041				 afis_1:
     59	0041  80 C2 30			   add dl, '0'
     60	0044  B4 02			   mov ah, 2
     61	0046  CD 21			   int 21h
     62	0048  5B			   pop bx
     63	0049  58			   pop ax
     64	004A  5A			   pop dx
     65	004B  5D			   pop bp
     66	004C  CA 0002			   retf	2
     67	004F			       afis endp
     68	004F				     program:
     69					     ; muta adresa segmentului de date in DS
     70	004F				     initializare:
     71	004F  B8 0000s				     mov ax, @data
     72	0052  8E D8				     mov ds, ax
     73	0054  A1 0000r			 mov ax, n
     74	0057				     start:
     75	0057  50			 push ax      ;	transferul parametrului	prin stiva
     76	0058  E8 FFA5			 call near ptr fact	  ; DX:AX <- rezultatul
     77	005B  83 C4 02			 add sp, 2
     78	005E  89 16 0004r		 mov word ptr rez + 2, dx ; rezultatul se depune in rez
     79	0062  A3 0002r			 mov word ptr rez, ax
     80	0065  FF 36 0002r		 push word ptr rez
     81	0069  0E E8 FFB8		 call far ptr afis	 ; afisarea rezultatului
     82					     ; iesire din program
     83	006D				     sfarsit:
     84	006D  B4 4C				     mov ah, 4Ch     ; functia DOS de iesire din program
     85	006F  CD 21				     int 21h
     86				     end program
Turbo Assembler	 Version 3.0	    12/13/20 19:54:35	    Page 3
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "12/13/20"
??FILENAME			  Text	 "l9a1	  "
??TIME				  Text	 "19:54:35"
??VERSION			  Number 0300
@32BIT				  Text	 0
@CODE				  Text	 _TEXT
@CODESIZE			  Text	 0
@CPU				  Text	 0101H
@CURSEG				  Text	 _TEXT
@DATA				  Text	 DGROUP
@DATASIZE			  Text	 0
@FILENAME			  Text	 L9A1
@INTERFACE			  Text	 00H
@MODEL				  Text	 2
@STACK				  Text	 DGROUP
@WORDSIZE			  Text	 2
AFIS				  Far	 _TEXT:0025
AFIS_1				  Near	 _TEXT:0041
FACT				  Near	 _TEXT:0000
INITIALIZARE			  Near	 _TEXT:004F
N				  Word	 DGROUP:0000
PROGRAM				  Near	 _TEXT:004F
REC				  Near	 _TEXT:0016
REZ				  Dword	 DGROUP:0002
SFARSIT				  Near	 _TEXT:006D
START				  Near	 _TEXT:0057
STOP				  Near	 _TEXT:0021

Structure Name			  Type	Offset

SABLON
 _BP				  Word	 0000
 _CS_IP				  Word	 0002
 _N				  Word	 0004
SABLON1
 __BP				  Word	 0000
 __CS_IP			  Dword	 0002
 __N				  Word	 0006

Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  STACK				  16  0064 Para	  Stack	  STACK
  _DATA				  16  0006 Word	  Public  DATA
_TEXT				  16  0071 Word	  Public  CODE
