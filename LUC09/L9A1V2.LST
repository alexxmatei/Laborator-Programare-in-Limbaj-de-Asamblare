Turbo Assembler	 Version 3.0	    12/13/20 19:40:36	    Page 1
l9a1v2.ASM



      1	0000			     .model small
      2	0000			     .stack 100
      3	*000			     sablon struc
      4	*000  01*(????)		       _bp    dw ?
      5	*002  01*(????)		       _cs_ip dw ?
      6	*004  01*(????)		       _n     dw ?
      7	*006			     sablon ends
      8	*000			     sablon struc
      9	*000  01*(????)		       _bp1	 dw ?
     10	*002  01*(????)		       _cs_ip1	 dw ?
     11	*004  01*(????)		       _rez_low	 dw ?
     12	*006  01*(????)		       _rez_high dw ?
     13	*008			     sablon ends
     14	0000			     .data
     15	0000  0009			     n	 dw 9
     16	0002  ????????		       rez dd ?
     17	0006			     .code
     18
     19	0000			       fact proc near
     20	0000  55			   push	bp    ;	salvare	BP
     21	0001  8B EC			   mov bp, sp ;	initializare cu	varful stivei
     22	0003  9C			   pushf      ;	salvarea indicatorilor de conditie
     23	0004  53			   push	bx
     24	0005  8B 5E 04			   mov bx, word	ptr [bp]._n ; preluarea	parametrului
     25	0008  83 FB 00			   cmp bx, 0  ;	conditia de oprire
     26	000B  75 09			   jne rec
     27	000D  B8 0001			   mov ax, 1  ;	0! = 1
     28	0010  BA 0000			   mov dx, 0
     29	0013  EB 0C 90			   jmp stop
     30	0016				 rec:
     31	0016  4B			   dec bx	     ; termenul	urmator
     32	0017  53			   push	bx	     ; transferul parametrului
     33	0018  E8 FFE5			   call	near ptr fact; apel recursiv cu	rezultat in DX:AX
     34	001B  83 C4 02			   add sp, 2
     35	001E  F7 66 04			   mul word ptr[bp]._n
     36	0021				 stop:
     37	0021  5B			   pop bx     ;	refacerea registrului BX
     38	0022  9D			   popf	      ;	refacerea indicatorilor	de conditie
     39	0023  5D			   pop bp
     40	0024  C3			   retn
     41	0025			       fact endp
     42
     43	0025			       afis proc near
     44	0025  55			   push	bp    ;	salvare	BP
     45	0026  8B EC			   mov bp, sp ;	initializare cu	varful stivei
     46	0028  9C			   pushf      ;	salvarea indicatorilor de conditie
     47	0029  52			   push	dx
     48	002A  50			   push	ax
     49	002B  8B 56 04			   mov dx, [bp]._rez_low
     50	002E  8B 46 06			   mov ax, [bp]._rez_high
     51	0031  3D 000A			   cmp ax, 10  ; conditia de oprire
     52	0034  77 04			   ja rec1
     53	0036  52			   push	dx
     54	0037  EB 01 90			   jmp stop1
     55	003A				 rec1:
     56
     57	003A				 stop1:
Turbo Assembler	 Version 3.0	    12/13/20 19:40:36	    Page 2
l9a1v2.ASM



     58					   ; push ax	  ; salvarea registrelor
     59					   ; push bx
     60					   ; push cx
     61					   ; push dx
     62					   ; mov dx, word ptr rez + 2 ;	preluare din rezultat
     63					   ; mov ax, word ptr rez
     64					   ; mov cx, 0		      ;	initializarea contorului
     65					   ; mov bx, 10
     66					 ; next:
     67					   ; div bx	; se obtine pe rand in DX
     68						      ;	; fiecare cifra	zecimala
     69					   ; push dx	; salvarea in stiva e necesara pentru
     70						      ;	; afisarea in ordinea corecta
     71					   ; mov dx, 0
     72					   ; inc cx
     73					   ; cmp ax, 0
     74					   ; jne next
     75					 ; print:
     76					   ; pop dx	  ; preluare din stiva
     77					   ; add dl, 30h  ; conversie la codul ASCII
     78					   ; mov ah, 02h
     79					   ; int 21h	  ; afisarea
     80					   ; loop print
     81					   ; pop dx	  ; refacerea registrelor
     82					   ; pop cx
     83					   ; pop bx
     84					   ; pop ax
     85					   ; retn
     86
     87	003A			       afis endp
     88
     89	003A				     program:
     90					     ; muta adresa segmentului de date in DS
     91	003A				     initializare:
     92	003A  B8 0000s				     mov ax, @data
     93	003D  8E D8				     mov ds, ax
     94	003F  A1 0000r			 mov ax, n
     95	0042				     start:
     96	0042  50			 push ax      ;	transferul parametrului	prin stiva
     97	0043  E8 FFBA			 call near ptr fact	  ; DX:AX <- rezultatul
     98	0046  83 C4 02			 add sp, 2
     99	0049  89 16 0004r		 mov word ptr rez + 2, dx ; rezultatul se depune in rez
    100	004D  A3 0002r			 mov word ptr rez, ax
    101	0050  FF 36 0002r		 push word ptr rez
    102	0054  FF 36 0004r		 push word ptr rez + 2
    103	0058  E8 FFCA			 call near ptr afis	  ; afisarea rezultatului
    104					     ; iesire din program
    105	005B				     sfarsit:
    106	005B  B4 4C				     mov ah, 4Ch     ; functia DOS de iesire din program
    107	005D  CD 21				     int 21h
    108				     end program
Turbo Assembler	 Version 3.0	    12/13/20 19:40:36	    Page 3
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "12/13/20"
??FILENAME			  Text	 "l9a1v2  "
??TIME				  Text	 "19:40:36"
??VERSION			  Number 0300
@32BIT				  Text	 0
@CODE				  Text	 _TEXT
@CODESIZE			  Text	 0
@CPU				  Text	 0101H
@CURSEG				  Text	 _TEXT
@DATA				  Text	 DGROUP
@DATASIZE			  Text	 0
@FILENAME			  Text	 L9A1V2
@INTERFACE			  Text	 00H
@MODEL				  Text	 2
@STACK				  Text	 DGROUP
@WORDSIZE			  Text	 2
AFIS				  Near	 _TEXT:0025
FACT				  Near	 _TEXT:0000
INITIALIZARE			  Near	 _TEXT:003A
N				  Word	 DGROUP:0000
PROGRAM				  Near	 _TEXT:003A
REC				  Near	 _TEXT:0016
REC1				  Near	 _TEXT:003A
REZ				  Dword	 DGROUP:0002
SFARSIT				  Near	 _TEXT:005B
START				  Near	 _TEXT:0042
STOP				  Near	 _TEXT:0021
STOP1				  Near	 _TEXT:003A

Structure Name			  Type	Offset

SABLON
 _BP1				  Word	 0000
 _CS_IP1			  Word	 0002
 _REZ_LOW			  Word	 0004
 _REZ_HIGH			  Word	 0006

Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  STACK				  16  0064 Para	  Stack	  STACK
  _DATA				  16  0006 Word	  Public  DATA
_TEXT				  16  005F Word	  Public  CODE
