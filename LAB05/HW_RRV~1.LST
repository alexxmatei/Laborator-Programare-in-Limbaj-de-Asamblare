Turbo Assembler	 Version 3.0	    11/05/20 16:13:50	    Page 1
HW_RRV~1.ASM



      1	0000			     .model small
      2	0000			     .stack 100
      3	0000			     .data
      4	0000  0010			     base_16 dw	16
      5	0002  145A789F			     x dd 145A789Fh
      6	0006  92457ABC			     y dd 92457ABCH
      7	000A  ????????			     res dd ? ;A69F F35B
      8	000E  30 31 32 33 34 35	36+	     tabc db '0123456789ABCDEF'
      9	      37 38 39 41 42 43	44+
     10	      45 46
     11	001E			     .code
     12	0000			     start:
     13	0000  B8 0000s			     mov ax, @data
     14	0003  8E D8			     mov ds, ax
     15
     16					     ;aduc primul operand in ax	si bx
     17	0005  A1 0002r			     mov ax, word ptr x
     18	0008  8B 1E 0004r		     mov bx, word ptr x+2
     19
     20					     ;aduc al doilea operand in	cx si dx
     21	000C  8B 0E 0006r		     mov cx, word ptr y
     22	0010  8B 16 0008r		     mov dx, word ptr y+2
     23
     24					     ;efectuez adunarea
     25	0014  03 C1			     add ax, cx
     26	0016  13 DA			     adc bx, dx
     27
     28					     ;stochez rezultatul in variabila res pe 32	biti
     29	0018  A3 000Ar			     mov word ptr res, ax
     30	001B  89 1E 000Cr		     mov word ptr res+2, bx
     31
     32					     ;printare primul numar pe 16 biti
     33	001F  A1 000Cr			     mov ax, word ptr res+2
     34	0022  BB 000Er			     LEA bx, tabc
     35
     36
     37
     38	0025  33 C9			     xor  cx, cx
     39
     40
     41	0027				     repeat_loop:
     42	0027  33 D2				     xor  dx, dx
     43	0029  F7 36 0000r			     div  base_16
     44	002D  52				     push dx		     ;push remainder in	stiva -> nr%16 ultima cifra
     45	002E  41				     inc  cx		     ;counter++
     46	002F  85 C0				     test ax, ax
     47	0031  75 F4				     jnz  repeat_loop
     48
     49
     50	0033				     print_char:
     51	0033  58				     pop  ax
     52	0034  D7				     xlat
     53	0035  8B D0				     mov dx, ax
     54	0037  B4 02				     mov  ah, 02h
     55	0039  CD 21				     int  21h
     56	003B  E2 F6			 loop print_char
     57
Turbo Assembler	 Version 3.0	    11/05/20 16:13:50	    Page 2
HW_RRV~1.ASM



     58					     ;printare al doilea numar pe 16 biti
     59	003D  A1 000Ar			     mov ax, word ptr res
     60
     61	0040  33 C9			     xor  cx, cx
     62
     63
     64	0042				     repeat_loop1:
     65	0042  33 D2				     xor  dx, dx
     66	0044  F7 36 0000r			     div  base_16
     67	0048  52				     push dx		     ;push remainder in	stiva -> nr%16 ultima cifra
     68	0049  41				     inc  cx		     ;counter++
     69	004A  85 C0				     test ax, ax
     70	004C  75 F4				     jnz  repeat_loop1
     71
     72
     73	004E				     print_char1:
     74	004E  58				     pop  ax
     75	004F  D7				     xlat
     76	0050  8B D0				     mov dx, ax
     77	0052  B4 02				     mov  ah, 02h
     78	0054  CD 21				     int  21h
     79	0056  E2 F6			 loop print_char1
     80
     81
     82	0058  B4 4C			     mov ah, 4ch
     83	005A  CD 21			     int 21h
     84				     end start
Turbo Assembler	 Version 3.0	    11/05/20 16:13:50	    Page 3
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "11/05/20"
??FILENAME			  Text	 "HW_RRV~1"
??TIME				  Text	 "16:13:50"
??VERSION			  Number 0300
@32BIT				  Text	 0
@CODE				  Text	 _TEXT
@CODESIZE			  Text	 0
@CPU				  Text	 0101H
@CURSEG				  Text	 _TEXT
@DATA				  Text	 DGROUP
@DATASIZE			  Text	 0
@FILENAME			  Text	 HW_RRV~1
@INTERFACE			  Text	 00H
@MODEL				  Text	 2
@STACK				  Text	 DGROUP
@WORDSIZE			  Text	 2
BASE_16				  Word	 DGROUP:0000
PRINT_CHAR			  Near	 _TEXT:0033
PRINT_CHAR1			  Near	 _TEXT:004E
REPEAT_LOOP			  Near	 _TEXT:0027
REPEAT_LOOP1			  Near	 _TEXT:0042
RES				  Dword	 DGROUP:000A
START				  Near	 _TEXT:0000
TABC				  Byte	 DGROUP:000E
X				  Dword	 DGROUP:0002
Y				  Dword	 DGROUP:0006

Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  STACK				  16  0064 Para	  Stack	  STACK
  _DATA				  16  001E Word	  Public  DATA
_TEXT				  16  005C Word	  Public  CODE
