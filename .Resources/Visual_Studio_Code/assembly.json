{
	// Place your snippets for assembly here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
  // }
  "Template snippet 1": {
    "prefix": "templ1",
    "body": [
    ".model small",
    ".stack 100",
    ".data",
    "  ${1:;definire date}",	
    ".code",
    "program:",
    " ; muta adresa segmentului de date in DS",
    " initializare:",
    "  mov ax, @data",
    "  mov ds, ax",
    "",
    " start:",
    "  ${2:;instructiuni program}",	
    "",
    " ; iesire din program",
    " sfarsit:",
    "  mov ah, 4Ch    ; functia DOS de iesire din program",
    "  int 21h",
    "end program"
    ],
    "description": "Assembly program template nr. 1."
  },

  "Template snippet 2": {
    "prefix": "templ2",
    "body": [
    "linie_noua MACRO",
    "  mov dl, 10",
    "  mov ah, 2",
    "  int 21h",
    "ENDM",
    "",
    ".model small",
    ".stack 100",
    ".data",
    "  ${1:;definire date}",	
    ".code",
    "program:",
    " ; muta adresa segmentului de date in DS",
    " initializare:",
    "  mov ax, @data",
    "  mov ds, ax",
    "",
    " start:",
    "  ${2:;instructiuni program}",	
    "",
    " ; iesire din program",
    " sfarsit:",
    "  ; adauga un caracter de tip 'newline', linie noua",
    "  linie_noua",
    "  mov ah, 4Ch    ; functia DOS de iesire din program",
    "  int 21h",
    "end program"
    ],
    "description": "Assembly program template nr. 2."
  },

  "Template snippet 3": {
    "prefix": "templ3",
    "body": [
    "linie_noua MACRO",
    "  mov dl, 13 ; Carriage Return",
    "  mov ah, 2",
    "  int 21h",
    "  mov dl, 10 ; Line Feed",
    "  mov ah, 2",
    "  int 21h",
    "ENDM",
    "",
    ".model small",
    ".stack ${1:100 ; dimensiunea stivei}",
    ".data",
    "  ${2:;definire date}",	
    ".code",
    "program:",
    " ; muta adresa segmentului de date in DS",
    " initializare:",
    "  mov ax, @data",
    "  mov ds, ax",
    "",
    " start:",
    "  ${3:;instructiuni program}",	
    "",
    " ; iesire din program",
    " sfarsit:",
    "  ; adauga un caracter de tip 'newline', linie noua",
    "  linie_noua",
    "  mov ah, 4Ch    ; functia DOS de iesire din program",
    "  int 21h",
    "end program"
    ],
    "description": "Assembly program template nr. 3."
  }
}